#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node *next;
	struct node *prev;
};
typedef struct node * NODE;
//NODE insert_left(int item,NODE head,NODE n);
NODE getnode();
void display(NODE head);
NODE delete_val(NODE head,int value);
NODE insert_front(int item,NODE head);
NODE getnode()
{
	NODE p;
	p=(NODE)malloc(sizeof(struct node));
	if(p!=NULL)
		return p;
	else
	{
		printf("memory could not be allocated\n");
		exit(0);
	}
}
NODE insert_front(int item,NODE head)
{
	NODE p;
	p=getnode();
	p->data=item;
	p->next=head;
	head=p;
	return head;
}
/*NODE insert_left(int item,NODE head,NODE n)
{
	NODE newn=getnode();
	newn->data=item;
	if(n==head)
	{
	newn->next=n;
	n->prev=newn;
	//printf("a1\n");
	newn->prev=NULL;
	//printf("b\n");
	head=newn;
	//printf("c\n");
	return head;
	//printf("d\n");
	}
	else
	//printf("e\n");
	n->prev->next=newn;
	newn->prev=n->prev;
	newn->next=n;
	n->prev=newn;
	return head;
	//printf("f\n");
}*/
void display(NODE head)
{
	NODE p;
	if(head==NULL)
	{
		printf("list is empty\n");
		exit(0);
	}
	p=head;
	while(p!=NULL)
	{
		printf("%d\n",p->data);
		p=p->next;
	}
}
NODE delete_val(NODE head,int value)
{
NODE p;
if(head==NULL)
{
printf("list is empty\n");
return head;
}
if(head->next==NULL)
{
if(head->data==value)
{
free(head);
return NULL;
}
else
{
printf("value not found\n");
return head;
}
}
p=head;
while(p!=NULL)
{
if(p->data==value)
{
if(p->prev!=NULL)
p->prev->next=NULL;
else
head=p->next;
if(p->next!=NULL)
{
p->next->prev=p->prev;
}
free(p);
return head;
}
p=p->next;
}
if(p==NULL)
{
printf("value not found\n");
return head;
}
}


int main()
{
NODE head=NULL;
	int ch,e,ele;
	printf("enter\n1.insert \n2.delete the given value\n3.display\n-1.exit\n");
	scanf("%d",&ch);
	while(ch!=-1)
	{
		switch(ch)
		{
		case 1:printf("enter the item to be inserted in the liked list\n");
				scanf("%d",&e);
				//head=insert_left(e,head,head);
				head=insert_front(e,head);
				break;
		case 2:printf("enter the value you wanna delete\n");
		       scanf("%d",&ele);
		         head=delete_val(head,ele);
				break;		
		case 3:display(head);
		       break;
		default:printf("invalid input\n");
		}
		printf("enter next choice or -1 to exit\n");
		scanf("%d",&ch);
	}
	return 0;
}                                          
		
				
