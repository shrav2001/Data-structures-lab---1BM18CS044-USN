#include<stdio.h>
#include<stdlib.h>
struct node
{
int data;
struct node *next;
};
typedef struct node * NODE;
NODE getnode();
NODE insert(NODE head,int item);
NODE delete(NODE head);
void display(NODE head);
int main()
{
NODE head=NULL;
int ch,item;
do
{
printf("\npress\n1:insert\n2:delete\n3:display\n4:exit\n");
scanf("%d",&ch);
switch(ch)
{
case 1:printf("enter the element you want to insert");
scanf("%d",&item);
head=insert(head,item);
break;
case 2:head=delete(head);
break;
case 3:display(head);
break;
case 4:break;
default: printf("invalid choice\n");
break;
};
}while(ch!=4);
return 0;
}
NODE getnode()
{
NODE p;
p=(NODE)malloc(sizeof(struct node));
if(p!=NULL)
return p;
else
{
printf("memory could not be allocated\n");
exit(0);
}
}
NODE insert(NODE head,int item)
{
NODE p,q;
q=getnode();
q->data=item;
q->next=NULL;
if(head==NULL)
return q;
p=head;
while(p->next!=NULL)
{
p=p->next;
}
p->next=q;
return head;	
}
NODE delete(NODE head)
{
NODE p=head;
if(head==NULL)
{
printf("queue is empty\n");
return head;
}
printf("deleted element is %d\n",p->data);
head=p->next;
free(p);
return head;
}
void display(NODE head)
{
NODE p;
printf("the elements are:\n");
if(head==NULL)
{
printf("queue is empty\n");
exit(0);
}
p=head;
while(p!=NULL)
{
printf("%d ",p->data);
p=p->next;
}
}

